@page "/register"
@using System.ComponentModel.DataAnnotations
@using Katering.Data.Service
@inject NavigationManager NavigationManager
@inject RegistrationService RegistrationService
@inject ILogger<Register> Logger

<h3 class="register-title">
    Witamy w rejestracji. 
<br/>
    Jeżeli jesteś tu pierwszy raz załóż konto
</h3>

<EditForm Model="Model" OnValidSubmit="Submit" FormName="RegistrationForm">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText @bind-Value="Model!.Email" id="email" />
    </div>

    <div class="form-group">
        <label for="password">Hasło:</label>
        <InputText @bind-Value="Model!.Password" type="password" id="password" />
    </div>

    <div class="form-group">
        <label for="passwordVerification">Powtórz hasło:</label>
        <InputText @bind-Value="Model!.PasswordVerification" type="password" id="passwordVerification"/>
    </div>

    <div class="form-group">
        <label for="name">Imię:</label>
        <InputText @bind-Value="Model!.Name" id="name"/>
    </div>

    <div class="form-group">
        <label for="surname">Nazwisko:</label>
        <InputText @bind-Value="Model!.Surname" id="surname"/>
    </div>
    <div class="form-group">
        <button type="submit" class="submit-btn">Zarejestruj się</button>
    </div>
   
    <marquee direction="left" class="scrolling-text">
        Zarejestruj się już dziś i dołącz do miliona zadowolonych klientów.
        Korzystaj ze zniżek oraz ciesz się wyśmienitymi posiłkami na każdą okazję.
        Nasze usługi cateringowe oferują wyjątkową jakość i smak, które zadowolą każdego.
        Dostosujemy naszą ofertę do Twoich potrzeb – od pysznych obiadów po eleganckie przyjęcia i eventy.
        Dzięki nam możesz skupić się na tym, co najważniejsze, a my zadbamy o resztę. Zaufaj profesjonalistom i rozkoszuj się posiłkami dostarczanymi prosto pod Twoje drzwi.
        Nasza misja to dostarczać pyszne jedzenie, które jest nie tylko zdrowe, ale także przygotowane z najlepszych składników.
    </marquee>

</EditForm>



@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}

@code {
    [SupplyParameterFromForm]

    private Katering.Components.Pages.Model.RegistrationModel Model { get; set; } = new();

    private string? ErrorMessage { get; set; }

    protected override void OnInitialized() => Model ??= new();

    private async Task Submit()
    {
        if (Model == null)
        {
            ErrorMessage = "Nieprawidłowe dane.";
            return;
        }
        List<string> validationErrors;
        var result = RegistrationService.RegisterClient(Model, out validationErrors);

        try
        {
            switch (result)
            {
                case RegistrationResult.SUCCESS:
                    Logger.LogInformation("Rejestracja zakończona sukcesem dla {Email}", Model.Email);
                    await Task.Delay(100); // Opcjonalne krótkie opóźnienie, aby umożliwić przetworzenie
                    NavigationManager.NavigateTo("/login");
                break;

                case RegistrationResult.ALREADY_REGISTERED:
                    ErrorMessage = "Email już jest zarejestrowany.";
                    break;

                case RegistrationResult.INVALID_DATA:
                    // Łączymy wszystkie komunikaty o błędach w jeden ciąg
                    ErrorMessage = String.Join("\n", validationErrors);
                    break;

                case RegistrationResult.ERROR:
                    ErrorMessage = "Wystąpił błąd podczas rejestracji.";
                    break;
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Błąd podczas nawigacji.");
            ErrorMessage = "Wystąpił problem z nawigacją.";
        }
    }
}