@page "/login"
@using Katering.Data.Service
@using Katering.Components.Pages.Model
@using Katering.Data.SessionState
@inject NavigationManager NavigationManager
@inject RegistrationService RegistrationService
@inject UserService UserService
@inject SessionState SessionState

<h3 class="login-title">Zaloguj się</h3>

<EditForm EditContext="editContext" OnValidSubmit="LoginUser" FormName="LoginName">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="login">Login:</label>
        <br/>
        <InputText @bind-Value="Model.Login" id="login" />
    </div>

    <div class="form-group">
        <label for="password">Hasło:</label>
        <br/>
        <InputText @bind-Value="Model.Password" type="password" id="password"/>
    </div>
    <div class="form-group">
        <button type="submit" class="submit-btn">Zaloguj się</button>
    </div>
   
</EditForm>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}

@code {
    private EditContext editContext;

    private string? ErrorMessage { get; set; }

    public LoginModel Model { get; set; } = new LoginModel();

    protected override void OnInitialized()
    {
        editContext = new EditContext(Model);

    }   
    private async Task LoginUser()
    {
        var result = await UserService.Login(Model);
        if (result == LoginResult.SUCCESS)
        {
            NavigateByUserRole();
        }
        else if (result == LoginResult.UNKNOWN_EMAIL)
        {
            ErrorMessage = "Nieznany email, spróbuj ponownie";
        }
        else
        {
            ErrorMessage = "Wystąpił błąd przy logowaniu";
        }
    }
    private void NavigateByUserRole()
    {
        Console.WriteLine($"User Role: Admin - {SessionState.IsAdministration()}, Moderator - {SessionState.IsModerator()}, Contractor - {SessionState.IsContractor()}, Client - {SessionState.IsClient()}");

        if (SessionState.IsAdministration())
            NavigationManager.NavigateTo("/admin-dashboard");
        else if (SessionState.IsModerator())
            NavigationManager.NavigateTo("/moderator-dashboard");
        else if (SessionState.IsContractor())
            NavigationManager.NavigateTo("/contractor-dashboard");
        else if (SessionState.IsClient())
            NavigationManager.NavigateTo("/");
        Console.WriteLine("No roles matched. Check SessionState implementations.");
    }
}
